// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ABCCollegeDbContext))]
    [Migration("20230106091618_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Information Technology",
                            Title = "Information Technology"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Master Science Of Computer",
                            Title = "Master Science Of Computer"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CourseSubject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("TeacherID");

                    b.ToTable("CourseSubjects");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseID = 1,
                            SubjectID = 1,
                            TeacherID = 1
                        },
                        new
                        {
                            ID = 2,
                            CourseID = 1,
                            SubjectID = 2,
                            TeacherID = 1
                        },
                        new
                        {
                            ID = 3,
                            CourseID = 2,
                            SubjectID = 2,
                            TeacherID = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Enrollments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CourseSubjectID")
                        .HasColumnType("int");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseSubjectID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourseSubjectID = 1,
                            Grade = 0.0,
                            StudentID = 1
                        },
                        new
                        {
                            ID = 2,
                            CourseSubjectID = 2,
                            Grade = 0.0,
                            StudentID = 1
                        },
                        new
                        {
                            ID = 3,
                            CourseSubjectID = 3,
                            Grade = 0.0,
                            StudentID = 1
                        },
                        new
                        {
                            ID = 4,
                            CourseSubjectID = 2,
                            Grade = 0.0,
                            StudentID = 2
                        },
                        new
                        {
                            ID = 5,
                            CourseSubjectID = 3,
                            Grade = 0.0,
                            StudentID = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BirthDate = new DateTime(1926, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnrollmentDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Marilyn",
                            LastName = "Monroe",
                            RegistrationNo = ""
                        },
                        new
                        {
                            ID = 2,
                            BirthDate = new DateTime(1809, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnrollmentDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Abraham",
                            LastName = "Lincoln",
                            RegistrationNo = ""
                        },
                        new
                        {
                            ID = 3,
                            BirthDate = new DateTime(1918, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnrollmentDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nelson",
                            LastName = "Mandela",
                            RegistrationNo = ""
                        });
                });

            modelBuilder.Entity("Domain.Entities.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Using Visual Studio",
                            Name = "C#"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Using Eclips",
                            Name = "JAVA"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BirthDate = new DateTime(2023, 1, 6, 13, 16, 18, 190, DateTimeKind.Local).AddTicks(8830),
                            FirstName = "Teacher 1",
                            LastName = "Teacher 1",
                            Salary = 0.0
                        },
                        new
                        {
                            ID = 2,
                            BirthDate = new DateTime(2023, 1, 6, 13, 16, 18, 190, DateTimeKind.Local).AddTicks(8848),
                            FirstName = "Teacher 2",
                            LastName = "Teacher 2",
                            Salary = 0.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.CourseSubject", b =>
                {
                    b.HasOne("Domain.Entities.Course", "Course")
                        .WithMany("CourseSubject")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Subject", "Subject")
                        .WithMany("CourseSubject")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Teacher", "Teacher")
                        .WithMany("CourseSubject")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Domain.Entities.Enrollments", b =>
                {
                    b.HasOne("Domain.Entities.CourseSubject", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseSubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Navigation("CourseSubject");
                });

            modelBuilder.Entity("Domain.Entities.CourseSubject", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Domain.Entities.Subject", b =>
                {
                    b.Navigation("CourseSubject");
                });

            modelBuilder.Entity("Domain.Entities.Teacher", b =>
                {
                    b.Navigation("CourseSubject");
                });
#pragma warning restore 612, 618
        }
    }
}
